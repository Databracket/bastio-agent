#!/bin/sh

### BEGIN INIT INFO
# Provides:          bastio-agent
# Required-Start:    $network $local_fs $remote_fs $syslog
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Bastio's agent daemon in the background.
# Description:       In order for Bastio's frontend to provision accounts it
#                    needs the agent to be running to receive the necessary
#                    command to create, remove, and update system user accounts.
### END INIT INFO

# Author: Amr Ali <amr@databracket.com>

BASTIO_AGENT_NAME="bastio-agent"
BASTIO_AGENT_DESC="Bastio Agent"
BASTIO_AGENT_CONFIG="/etc/bastio/agent.conf"
BASTIO_AGENT_ARGS="--config ${BASTIO_AGENT_CONFIG} start"
BASTIO_AGENT_PID="/var/run/${BASTIO_AGENT_NAME}.pid"
BASTIO_AGENT="/opt/${BASTIO_AGENT_NAME}/bin/${BASTIO_AGENT_NAME}"
BASTIO_DAEMON="/opt/${BASTIO_AGENT_NAME}/bin/python"

set -e

. /lib/lsb/init-functions

test -x "${BASTIO_AGENT}" || exit 0

should_start() {
	if [ ! -r ${BASTIO_AGENT_SERVER_KEY} ]; then
		log_warning_msg "unable to read ${BASTIO_AGENT_SERVER_KEY}"
		exit 1
	fi

	if [ ! -r ${BASTIO_AGENT_FRONTEND_KEY} ]; then
		log_warning_msg "unable to read ${BASTIO_AGENT_FRONTEND_KEY}"
		exit 1
	fi
}

ACTION="${1}"
case ${ACTION} in
	start)
		should_start
		log_begin_msg "Starting ${BASTIO_AGENT_DESC}: ${BASTIO_AGENT_NAME}"
		start-stop-daemon --start --quiet --background --make-pidfile \
			--pidfile ${BASTIO_AGENT_PID} \
			--exec ${BASTIO_DAEMON} -- ${BASTIO_AGENT} ${BASTIO_AGENT_ARGS} ||
			{
				code=${?}
				log_warning_msg "${0}: start failed with error code ${code}" >&2
				log_end_msg ${code}
				exit ${code}
			}
		log_end_msg 0
		;;
	stop)
		log_begin_msg "Stopping ${BASTIO_AGENT_DESC}: ${BASTIO_AGENT_NAME}"
		start-stop-daemon --stop --quiet --pidfile ${BASTIO_AGENT_PID} \
			--oknodo --exec ${BASTIO_DAEMON} ||
			{
				code=${?}
				log_warning_msg "${0}: stop failed with error code ${code}" >&2
				log_end_msg ${code}
				exit ${code}
			}
		rm -f ${BASTIO_AGENT_PID} >/dev/null 2>&1
		log_end_msg 0
		;;
	restart|force-reload)
		log_begin_msg "Restarting ${BASTIO_AGENT_DESC}: ${BASTIO_AGENT_NAME}"
		start-stop-daemon --stop --quiet --pidfile ${BASTIO_AGENT_PID} \
			--oknodo --exec ${BASTIO_DAEMON}
		sleep 1
		should_start
		start-stop-daemon --start --quiet --background --make-pidfile \
			--pidfile ${BASTIO_AGENT_PID} \
			--exec ${BASTIO_DAEMON} -- ${BASTIO_AGENT} ${BASTIO_AGENT_ARGS} ||
			{
				code=${?}
				rm -f ${BASTIO_AGENT_PID} >/dev/null 2>&1
				log_warning_msg "${0}: restart failed with error code ${code}" >&2
				log_end_msg ${code}
				exit ${code}
			}
		log_end_msg 0
		;;
	status)
		status_of_proc ${BASTIO_AGENT} ${BASTIO_AGENT_NAME}
		;;
	*)
		N=/etc/init.d/${BASTIO_AGENT_NAME}
		echo "Usage: ${N} {start|stop|restart|force-reload|status}" >&2
		exit 1
		;;
esac

exit 0

